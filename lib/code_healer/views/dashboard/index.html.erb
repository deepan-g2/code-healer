<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CodeHealer Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      color: #333;
    }

    .dashboard-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
    }

    .dashboard-header {
      text-align: center;
      margin-bottom: 40px;
      color: white;
    }

    .dashboard-header h1 {
      font-size: 3rem;
      font-weight: 700;
      margin-bottom: 10px;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }

    .dashboard-header p {
      font-size: 1.2rem;
      opacity: 0.9;
    }

    .metrics-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 40px;
    }

    .metric-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      border: 1px solid rgba(255,255,255,0.2);
    }

    .metric-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .metric-value {
      font-size: 2.5rem;
      font-weight: 700;
      color: #667eea;
      margin-bottom: 8px;
    }

    .metric-label {
      font-size: 0.9rem;
      color: #666;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      font-weight: 500;
    }

    .metric-trend {
      font-size: 0.8rem;
      color: #28a745;
      margin-top: 8px;
    }

    .charts-section {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px;
      margin-bottom: 40px;
    }

    .chart-container {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .chart-title {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 20px;
      color: #333;
      text-align: center;
    }

    .recent-healings {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .section-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 20px;
      color: #333;
      text-align: center;
    }

    .healing-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 16px;
      border-bottom: 1px solid #eee;
      transition: background-color 0.2s ease;
    }

    .healing-item:hover {
      background-color: #f8f9fa;
    }

    .healing-item:last-child {
      border-bottom: none;
    }

    .healing-info h4 {
      font-size: 1rem;
      font-weight: 600;
      color: #333;
      margin-bottom: 4px;
    }

    .healing-info p {
      font-size: 0.9rem;
      color: #666;
      margin: 0;
    }

    .healing-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 500;
      text-transform: uppercase;
    }

    .status-success {
      background-color: #d4edda;
      color: #155724;
    }

    .status-failed {
      background-color: #f8d7da;
      color: #721c24;
    }

    .status-pending {
      background-color: #fff3cd;
      color: #856404;
    }

    .view-details-btn {
      background: #667eea;
      color: white;
      padding: 8px 16px;
      border-radius: 20px;
      text-decoration: none;
      font-size: 0.8rem;
      font-weight: 500;
      transition: background-color 0.2s ease;
    }

    .view-details-btn:hover {
      background: #5a6fd8;
    }

    @media (max-width: 768px) {
      .charts-section {
        grid-template-columns: 1fr;
      }
      
      .dashboard-header h1 {
        font-size: 2rem;
      }
      
      .metric-value {
        font-size: 2rem;
      }
    }

    .loading {
      text-align: center;
      padding: 40px;
      color: #666;
    }

    .error {
      background: #f8d7da;
      color: #721c24;
      padding: 16px;
      border-radius: 8px;
      margin: 20px 0;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="dashboard-container">
    <div class="dashboard-header">
      <h1>üè• CodeHealer Dashboard</h1>
      <p>AI-Powered Code Healing & Self-Repair Analytics</p>
    </div>

    <div class="metrics-grid">
      <div class="metric-card">
        <div class="metric-value" id="total-healings">-</div>
        <div class="metric-label">Total Healings</div>
        <div class="metric-trend">üìà All time</div>
      </div>
      
      <div class="metric-card">
        <div class="metric-value" id="success-rate">-</div>
        <div class="metric-label">Success Rate</div>
        <div class="metric-trend">üéØ Performance</div>
      </div>
      
      <div class="metric-card">
        <div class="metric-value" id="healings-today">-</div>
        <div class="metric-label">Healings Today</div>
        <div class="metric-trend">üìÖ Daily</div>
      </div>
      
      <div class="metric-card">
        <div class="metric-value" id="avg-resolution">-</div>
        <div class="metric-label">Avg Resolution Time</div>
        <div class="metric-trend">‚ö° Speed</div>
      </div>
    </div>

    <div class="charts-section">
      <div class="chart-container">
        <div class="chart-title">Daily Healing Trend (Last 7 Days)</div>
        <canvas id="dailyTrendChart" width="400" height="200"></canvas>
      </div>
      
      <div class="chart-container">
        <div class="chart-title">Evolution Methods Distribution</div>
        <canvas id="evolutionMethodsChart" width="400" height="200"></canvas>
      </div>
    </div>

    <div class="recent-healings">
      <div class="section-title">Recent Healing Operations</div>
      <div id="recent-healings-list">
        <div class="loading">Loading recent healings...</div>
      </div>
    </div>
  </div>

  <script>
    // Dashboard data loading
    async function loadDashboardData() {
      try {
        const response = await fetch('/code_healer/api/dashboard/summary');
        const data = await response.json();
        
        if (response.ok) {
          updateMetrics(data);
          updateCharts(data);
          loadRecentHealings();
        } else {
          throw new Error('Failed to load dashboard data');
        }
      } catch (error) {
        console.error('Error loading dashboard data:', error);
        document.querySelector('.metrics-grid').innerHTML = 
          '<div class="error">Failed to load dashboard data. Please try again later.</div>';
      }
    }

    function updateMetrics(data) {
      document.getElementById('total-healings').textContent = data.total_healings || 0;
      document.getElementById('success-rate').textContent = `${data.success_rate || 0}%`;
      document.getElementById('healings-today').textContent = data.healings_today || 0;
      document.getElementById('avg-resolution').textContent = `${data.average_resolution_time || 0}ms`;
    }

    function updateCharts(data) {
      // Daily Trend Chart
      const dailyCtx = document.getElementById('dailyTrendChart').getContext('2d');
      new Chart(dailyCtx, {
        type: 'line',
        data: {
          labels: Object.keys(data.daily_trend || {}),
          datasets: [{
            label: 'Healings',
            data: Object.values(data.daily_trend || {}),
            borderColor: '#667eea',
            backgroundColor: 'rgba(102, 126, 234, 0.1)',
            tension: 0.4,
            fill: true
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: false
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 1
              }
            }
          }
        }
      });

      // Evolution Methods Chart
      const evolutionCtx = document.getElementById('evolutionMethodsChart').getContext('2d');
      new Chart(evolutionCtx, {
        type: 'doughnut',
        data: {
          labels: Object.keys(data.evolution_methods || {}),
          datasets: [{
            data: Object.values(data.evolution_methods || {}),
            backgroundColor: [
              '#667eea',
              '#764ba2',
              '#f093fb',
              '#f5576c',
              '#4facfe',
              '#00f2fe'
            ]
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    }

    async function loadRecentHealings() {
      try {
        const response = await fetch('/code_healer/api/dashboard/metrics?limit=5');
        const healings = await response.json();
        
        const container = document.getElementById('recent-healings-list');
        if (healings && healings.length > 0) {
          container.innerHTML = healings.map(healing => `
            <div class="healing-item">
              <div class="healing-info">
                <h4>${healing.class_name}#${healing.method_name}</h4>
                <p>${healing.error_class}: ${healing.error_message}</p>
                <small>${new Date(healing.created_at).toLocaleString()}</small>
              </div>
              <div style="display: flex; align-items: center; gap: 12px;">
                <div class="healing-status status-${healing.healing_successful ? 'success' : 'failed'}">
                  ${healing.healing_successful ? '‚úÖ Success' : '‚ùå Failed'}
                </div>
                <a href="/code_healer/dashboard/healing/${healing.healing_id}" class="view-details-btn">
                  View Details
                </a>
              </div>
            </div>
          `).join('');
        } else {
          container.innerHTML = '<div class="loading">No healing operations found yet.</div>';
        }
      } catch (error) {
        console.error('Error loading recent healings:', error);
        document.getElementById('recent-healings-list').innerHTML = 
          '<div class="error">Failed to load recent healings.</div>';
      }
    }

    // Initialize dashboard
    document.addEventListener('DOMContentLoaded', loadDashboardData);

    // Auto-refresh every 30 seconds
    setInterval(loadDashboardData, 30000);
  </script>
</body>
</html>
